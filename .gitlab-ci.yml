stages:
  - build
  - deploy
  - notify_telegram

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
    # - if: $CI_COMMIT_BRANCH == 'main'
    # - if: $CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'master'

variables:
  SKAFFOLD_DEFAULT_REPO: $CI_REGISTRY_IMAGE
  SKAFFOLD_FILE_OUTPUT: "tags.json"
  SKAFFOLD_BUILD_ARTIFACTS: "tags.json"
  SKAFFOLD_FILENAME: ".ci/skaffold.yaml"
  DOCKER_TLS_CERTDIR: "/certs"

build: &build_definition
  stage: build
  image: jafnhaar/build-image:v1
  services:
    - docker:20.10.16-dind
  before_script:
    - apk add --no-cache docker-cli
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
  script:
    - skaffold build
  after_script:
    - echo "DEPLOY_ENVIRONMENT=${CI_ENVIRONMENT_NAME}" > build.env
    - echo "DEPLOY_URL=${CI_ENVIRONMENT_URL}" >> build.env
    - echo "CI_FAILED_STAGE=${CI_BUILD_STAGE}" >> build.env
  artifacts:
    paths:
      - tags.json
    reports:
      dotenv: build.env
    expire_in: 1 week

deploy_prod: &deploy_definition
  stage: deploy
  # variables:
  #   GIT_SUBMODULE_STRATEGY: normal
  environment:
    name: prod
    url: https://meal.pnpl.tech
  image: jafnhaar/build-image:v1
  dependencies:
    - build
  before_script:
    - apk add git openssh-client
    - mkdir -p /root/.ssh
    - chmod 700 /root/.ssh
    - touch /root/.ssh/known_hosts
    - ssh-keyscan -H gitlab.com >> /root/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - ssh-add - <<< $(echo -n ${CI_RSA_KEY_BASE64}|base64 -d)
    - git submodule update --init
    - git submodule foreach '( if echo "$sm_path" | grep -E "^.ci/.+$"; then git fetch; git checkout master; git pull; fi  )'
    - export CI_FQDN=`echo $CI_ENVIRONMENT_URL | sed -E 's/^https:\/\/(.+)$/\1/'`
    - export KUBECONFIG="config"
    - printf "$CI_KUBECONFIG_BASE64" | base64 -d > $KUBECONFIG; chmod 600 $KUBECONFIG
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
  script:
    - cat tags.json
    # render is useful for debug purposes
    # - skaffold render
    - skaffold deploy
  after_script:
    - echo "DEPLOY_ENVIRONMENT=${CI_ENVIRONMENT_NAME}" > build.env
    - echo "DEPLOY_URL=${CI_ENVIRONMENT_URL}" >> build.env
    - echo "CI_FAILED_STAGE=${CI_BUILD_STAGE}" >> build.env
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
      when: on_success
  artifacts:
    reports:
      dotenv: build.env
    expire_in: 1 week

notify_success: &notify_definition
  stage: notify_telegram
  image: jafnhaar/build-image:v1
  before_script:
    - apk add git openssh-client
    - mkdir -p /root/.ssh
    - chmod 700 /root/.ssh
    - touch /root/.ssh/known_hosts
    - ssh-keyscan -H gitlab.com >> /root/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - ssh-add - <<< $(echo -n ${CI_RSA_KEY_BASE64}|base64 -d)
    - git submodule update --init
    - git submodule foreach '( if echo "$sm_path" | grep -E "^.ci/.+$"; then git fetch; git checkout master; git pull; fi  )'
    - chmod +x .ci/sh/*
  script:
    - bash .ci/sh/notify.sh success

notify_failure:
  <<: *notify_definition
  script:
    - bash .ci/sh/notify.sh failure
  when: on_failure
